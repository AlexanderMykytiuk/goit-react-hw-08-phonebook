{"version":3,"sources":["views/common.module.scss","Components/ContactList/ContactList.module.scss","Components/ListItem/ListItem.module.css","Components/Button/Button.module.css","Components/ContactForm/ContactForm.module.scss","Components/Filter/Filter.module.scss","redux/Contacts/contacts-operation.js","Components/Button/Button.jsx","Components/ListItem/ListItem.jsx","Components/ContactList/ContactList.jsx","redux/Contacts/contacts-selectors.js","Components/ContactList/ContactList.container.js","Components/ContactForm/ContactForm.jsx","Components/ContactForm/ContactForm.container.js","Components/Filter/Filter.jsx","Components/Filter/Filter.container.js","views/ContactsPage.js"],"names":["module","exports","fetchContactRequest","actions","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","name","number","dispatch","a","contact","axios","post","response","data","message","contactID","type","delete","get","Button","onClick","text","className","styles","button","defaultProps","ListItem","contacts","onDeleteContact","map","id","listItem","ContactList","container","list","getContacts","state","items","getFilter","filter","getVisibleContacts","createSelector","normalizedContact","toLowerCase","includes","connect","contactsOperation","ContactForm","handleInputChange","event","valueInput","currentTarget","setState","value","trimLeft","handleSubmit","preventDefault","props","addContact","test","toast","find","findContact","reset","this","onSubmit","form","label","input","onChange","React","Component","Filter","onHandleInputSearch","title","findContactLabel","findContactInput","placeholder","e","contactsActions","filterContact","ContactsPage","fetchContacts","contactContainer","isLoading","Spinner","loading"],"mappings":"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","file":"static/js/Contacts-page.dd1ce367.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginRegistrationPage\":\"common_LoginRegistrationPage__el0LV\",\"textField\":\"common_textField__21lNN\",\"margin\":\"common_margin__3_xRf\",\"button\":\"common_button__280oC\",\"mainTitle\":\"common_mainTitle__1qAgw\",\"image\":\"common_image__3x1HD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__2gx81\",\"list\":\"ContactList_list__1Djkd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ListItem_listItem__2pojN\",\"name\":\"ListItem_name__j8Xrr\",\"number\":\"ListItem_number__C6LRQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2JE4L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__2q77h\",\"form\":\"ContactForm_form__NSEzV\",\"input\":\"ContactForm_input__1uKSH\",\"label\":\"ContactForm_label__3udsz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findContact\":\"Filter_findContact__1Q5_C\",\"findContactLabel\":\"Filter_findContactLabel__3_TW7\",\"findContactInput\":\"Filter_findContactInput__1NITB\",\"title\":\"Filter_title__t0MwX\"};","import axios from 'axios';\nimport actions from './contacts-actions';\nconst {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} = actions;\n// axios.defaults.baseURL = 'http://localhost:8080';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactRequest());\n  try {\n    const response = await axios.get('/contacts');\n    dispatch(fetchContactSuccess(response.data));\n  } catch (error) {\n    dispatch(fetchContactError(error.message));\n  }\n};\nconst addContact = (name, number) => async dispatch => {\n  const contact = { name, number };\n  dispatch(addContactRequest());\n  try {\n    const response = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(response.data));\n  } catch (error) {\n    dispatch(addContactError(error.message));\n  }\n};\n\nconst deleteContact = contactID => async dispatch => {\n  dispatch({\n    type: deleteContactRequest(),\n  });\n  try {\n    await axios.delete(`./contacts/${contactID}`);\n    dispatch(deleteContactSuccess(contactID));\n  } catch (error) {\n    dispatch(deleteContactError(error.message));\n  }\n};\n\nexport default { addContact, deleteContact, fetchContacts };\n\n// до async await\n\n// const fetchContacts = () => dispatch => {\n//   dispatch(fetchContactRequest());\n//   axios\n//     .get('/contacts')\n//     .then(response => dispatch(fetchContactSuccess(response.data)))\n//     .catch(error =>\n//       dispatch(\n//         fetchContactError(error),\n//         // payload: error,\n//       ),\n//     );\n// };\n\n// const addContact = (name, number) => dispatch => {\n//   const contact = { name, number };\n//   dispatch(addContactRequest());\n\n//   axios\n//     .post('/contacts', contact)\n//     .then(response => dispatch(addContactSuccess(response.data)))\n//     .catch(error => dispatch(addContactError(error)));\n// };\n\n// const deleteContact = contactID => dispatch => {\n//   dispatch({\n//     type: deleteContactRequest(),\n//   });\n//   axios\n//     .delete(`./contacts/${contactID}`)\n//     .then(() => dispatch(deleteContactSuccess(contactID)))\n//     .catch(error => dispatch(deleteContactError(error)));\n// };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Button.module.css';\n\nconst Button = ({ onClick, text, type = 'button' }) => (\n  <button type={type} className={styles.button} onClick={onClick}>\n    {text}\n  </button>\n);\n\nButton.defaultProps = {\n  onClick: () => null,\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ListItem.module.css';\nimport Button from '../Button';\n\nconst ListItem = ({ contacts, onDeleteContact }) => {\n  return contacts.map(({ id, name, number }) => (\n    <li className={styles.listItem} key={id}>\n      <p className={styles.name}>{name} </p>\n      <p className={styles.number}>{number} </p>\n      <Button text=\"Delete\" onClick={() => onDeleteContact(id)} />\n    </li>\n  ));\n};\nListItem.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\nexport default ListItem;\n","import React from 'react';\nimport styles from './ContactList.module.scss';\nimport ListItem from '../ListItem';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <div className={styles.container}> \n    <ul className={styles.list}>\n      <ListItem contacts={contacts} onDeleteContact={onDeleteContact} />\n      </ul>\n      </div>\n  );\n};\n\nexport default ContactList;\n","// создает мемоизированный селектор\nimport { createSelector } from '@reduxjs/toolkit';\nexport const getIsLoading = state => state.contacts.loading;\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedContact = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedContact),\n    );\n  },\n);\n// то что было до createSelector\n\n// export const getVisibleContacts = state => {\n//   const filter = getFilter(state);\n//   const contacts = getContacts(state);\n//   const normalizedContact = filter.toLowerCase();\n//   return contacts.filter(contact =>\n//     contact.name.toLowerCase().includes(normalizedContact),\n//   );\n// };\n","import { connect } from 'react-redux';\nimport { contactsOperation } from '../../redux/Contacts';\nimport ContactList from './ContactList';\nimport { getVisibleContacts } from '../../redux/Contacts/contacts-selectors';\n\nconst mapStateToProps = state => {\n  return {\n    contacts: getVisibleContacts(state),\n  };\n};\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsOperation.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\n\nimport styles from './ContactForm.module.scss';\nimport Button from '../Button';\nimport { toast } from 'react-toastify';\n\nclass ContactForm extends React.Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  handleInputChange = event => {\n    const valueInput = event.currentTarget.name;\n    this.setState({ [valueInput]: event.currentTarget.value.trimLeft() });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { contacts, addContact } = this.props;\n    const { name, number } = this.state;\n    let expression = /^\\d+/;\n    if (!name || !number || expression.test(number) === false) {\n      return toast('Please fill all fields in the correct format');\n    }\n\n    const findName = contacts.find(findContact => {\n      return findContact.name === name;\n    });\n\n    if (findName) {\n      toast(`${name} is already in the contacts`);\n      this.reset();\n    } else {\n      addContact(name, number);\n      this.reset();\n    }\n  };\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n  render() {\n    const { name, number } = this.state;\n    return (\n      <div className={styles.container}>\n        <h2>Add new contacts</h2>\n        <form onSubmit={this.handleSubmit} className={styles.form}>\n          <label className={styles.label}>\n            Name\n            <input\n              className={styles.input}\n              name=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={this.handleInputChange}\n            />\n          </label>\n          <label className={styles.label}>\n            Number\n            <input\n              className={styles.input}\n              name=\"number\"\n              type=\"tel\"\n              value={number}\n              onChange={this.handleInputChange}\n            />\n          </label>\n          <Button text=\"Add contact\" type=\"submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;\n","import { connect } from 'react-redux';\nimport { contactsOperation } from '../../redux/Contacts';\nimport ContactForm from './ContactForm';\nimport { getContacts } from '../../redux/Contacts/contacts-selectors';\n\nconst mapStateToProps = state => ({\n  contacts: getContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addContact: (name, number) =>\n    dispatch(contactsOperation.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.scss';\n\nconst Filter = ({ filter, onHandleInputSearch }) => {\n  return (\n    <div className={styles.findContact}>\n      <h2 className={styles.title}>Find your contacts by name</h2>\n      <label className={styles.findContactLabel}>\n        \n        <input\n          className={styles.findContactInput}\n          name=\"filter\"\n          type=\"text\"\n          value={filter}\n          onChange={onHandleInputSearch}\n          placeholder='Enter the name'\n        />\n      </label>\n    </div>\n  );\n};\nFilter.propTypes = {\n  onHandleInputSearch: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","import { connect } from 'react-redux';\nimport { contactsActions } from '../../redux/Contacts';\nimport Filter from './Filter';\nimport { getFilter } from '../../redux/Contacts/contacts-selectors';\n\nconst mapStateToProps = state => ({\n  filter: getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onHandleInputSearch: e =>\n    dispatch(contactsActions.filterContact(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ContactList from '../Components/ContactList';\nimport ContactForm from '../Components/ContactForm';\nimport Filter from '../Components/Filter';\nimport { connect } from 'react-redux';\nimport contactsOperation from '../redux/Contacts/contacts-operation';\nimport Spinner from '../Components/Spinner';\nimport styles from './common.module.scss';\n\nclass ContactsPage extends React.Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n  render() {\n    return (\n      <div className={styles.contactContainer}>\n        <ContactForm />\n        <Filter />\n        {this.props.isLoading && <Spinner />}\n        <ContactList />\n        <ToastContainer />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  isLoading: state.contacts.loading,\n});\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperation.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsPage);\n// export default App;\n"],"sourceRoot":""}